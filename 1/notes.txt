1. 'config.txt' has IP:port of all seeds in separate lines
2. main.py is designed to read the seed info from config and run all the seeds(servers) which peers can connect to
3. Do seed nodes commnicate among themselves? Assignment me ek jagah diya hain ki graph must be connected
4. If a peer Im connected to dies, should I try to connect to another peer?
5. All socket operations throw exceptions which need to be handled
6. See https://docs.python.org/3/library/socket.html#notes-on-socket-timeouts for blocking/non-blocking operations
7. We might want to use sockey.create_connection and socket.create_server
8. IMP: Peers first set up a listening socket on some port. Then connect to seeds with a new socket. Then they send addr of the listening socket to be added to peer list
9. A peer maybe using multiplte sockets to join the network. each interface may have a different ip, then which one is the identity?
10. listener_socket.listen(10) -> why 10? (socket.listen(backlog) Listen for connections made to the socket. The backlog argument specifies the maximum number of queued connections and should be at least 1; the maximum value is system-dependent (usually 5).)
11. One possible failure case: A socket between A and B breaks. They both try to reconnect to each other. A send request to B and succeeds, B send request to A and fails. Then B will report A as a dead node!
12. Not sure if print on peer.py:92 and peer.py:106 should be there